{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAZSQ,SAASC,cAAc,SAyC/BC,iBAAiB,UAzBzB,SAAgBC,GACdA,EAAEC,iBAOF,IALA,IAAMC,EAAaF,EAAEG,cAAcC,SAC/BC,EAAaC,OAAOJ,EAAWb,MAAMkB,OACnCC,EAAYF,OAAOJ,EAAWO,KAAKF,OACnCG,EAAcJ,OAAOJ,EAAWS,OAAOJ,OAEpCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACjCF,GACFvB,EAAcyB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAInDgB,GAAcG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formRef = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onForm(e) {\n  e.preventDefault();\n\n  const currTarget = e.currentTarget.elements;\n  let delayValue = Number(currTarget.delay.value);\n  const stepValue = Number(currTarget.step.value);\n  const amountValue = Number(currTarget.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    if (amountValue) {\n      createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n    delayValue += stepValue;\n  }\n}\nformRef.addEventListener('submit', onForm);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","currTarget","currentTarget","elements","delayValue","Number","value","stepValue","step","amountValue","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c7d66d04.js.map"}